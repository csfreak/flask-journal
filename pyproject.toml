[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "flask_journal"
authors = [
  { name="Jason Ross", email="github@csfreak.com" },
]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Framework :: Flask",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
]
dynamic = ["version", "dependencies"]

[project.optional-dependencies]
deploy = ['gunicorn>=20.0.0']

[project.urls]
"Homepage" = "https://github.com/csfreak/flask-journal"
"Bug Tracker" = "https://github.com/csfreak/flask-journal"

[tool.setuptools.packages.find]
include = ["flask_journal*"]

[tool.setuptools.dynamic]
version = {file = "VERSION"}
dependencies = {file = ["requirements.txt"]}

[tool.flake8]
max-line-length = 120
max-complexity = 10
exclude = [
    '.git',       # No need to traverse our git directory
    '.venv',      # No need to scan imported code
    '.vscode',    # This is autogenerated and managed by vscode
    'migrations', # This is autogenerated
]

[tool.autopep8]
max_line_length = 120
aggressive = 2
exclude = 'migrations'  # This is autogenerated


[tool.pytest.ini_options]
testpaths = "test"
python_files = "test_*.py"
log_level = 'DEBUG'
addopts = "--capture=sys --cov=flask_journal --cov-report=term --cov-report=xml --cov-report=lcov --junitxml=.pytest.xml -n auto"

[tool.coverage.run]
branch = true
source = ["flask_journal"]
omit = [ 
    "flask_journal/config.py",
    "flask_journal/logging.py",
    "flask_journal/metrics.py"
]

[tool.coverage.report]
show_missing = true
skip_empty = true
fail_under = 90
exclude_lines = [
    "pragma: no cover",
    "pass",
    "def __str__",
    "def __repr__"
]

[tool.coverage.lcov]
output = '.coverage.lcov'

[tool.coverage.xml]
output = '.coverage.xml'

[tool.pyright]
reportOptionalMemberAccess = false
exclude = [
    '.git',       # No need to traverse our git directory
    '.venv',      # No need to scan imported code
    '.vscode',    # This is autogenerated and managed by vscode
    'migrations', # This is autogenerated
    'test',       # Dont to tests
]