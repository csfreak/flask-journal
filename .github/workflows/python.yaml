name: Python Checks

on:
  pull_request:
    branches:
      - "main"
      - "dev"
    paths:
      - "**.py"
      - "**requirements.txt"

permissions:
  checks: write
  contents: read

jobs:
  flake8:
    runs-on: ubuntu-latest
    name: Run flake8
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            test/requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r test/requirements.txt
      - uses: psf/black@stable
        with:
          options: --check --verbose --color
      - name: Setup flake8 annotations
        uses: rbialon/flake8-annotations@v1
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --show-source --statistics
      - name: Check imports with isort
        run: |
          isort -c --diff .
  test:
    runs-on: ubuntu-latest
    name: Run pytest and report test coverage
    needs: flake8
    permissions:
      checks: write
      contents: read
      issues: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            test/requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r test/requirements.txt
      - name: Tests
        run: |
          py.test --cov-report=xml --debug

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-xml-coverage-path: coverage.xml
          junitxml-path: ./.pytest.xml
  build:
    runs-on: ubuntu-latest
    name: Run Buildah
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            test/requirements.txt
      - name: Semantic Release
        id: release_version
        uses: go-semantic-release/action@v1.21.0
        with:
          github-token: ${{ github.token }}
          allow-initial-development-versions: true
          prerelease: true
          dry: true
      - name: SetVersion
        id: version
        run: |
          version=${{ steps.release_version.outputs.version }}
          echo $version > VERSION
      - name: Buildah
        uses: redhat-actions/buildah-build@v2
        with:
          image: flask_journal
          tags: ${{ github.sha }}
          containerfiles: |
            ./Dockerfile
          build-args: |
            APP_VERSION=${{ steps.release_version.outputs.version }}-${{ github.sha }}
          oci: true
