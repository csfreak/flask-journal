---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: pytest
  annotations:
    tekton.dev/categories: Testing
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: python, pytest
    tekton.dev/displayName: python pytest
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le"
spec:
  description: >-
    This task can be used run pytest
  workspaces:
    - name: source
  params:
    - name: PYTHON
      description: The used Python version, more precisely the tag for the Python image
      type: string
      default: "latest"
    - name: SOURCE_PATH
      description: The path to the source code
      default: "source"
    - name: REQUIREMENTS_FILE
      description: The name of the requirements file inside the source location
      default: "requirements.txt"
    - name: INSTALLABLE
      description: Should the package be installed locally before testing
      default: "False"
    - name: PYTEST_ARGS
      description: Arguments passed to pytest
      default: ""
  stepTemplate:
    image: docker.io/python:$(inputs.params.PYTHON)
    workingDir: $(workspaces.source.path)
    volumeMounts:
      - name: venv-dir
        mountPath: /venv
  volumes:
    - name: venv-dir
      emptyDir: {}
  steps:
    - name: setup-venv
      script: |
        #!/usr/bin/env bash
        set -e
        python -m venv /venv
    - name: install-requirements
      script: |
        #!/usr/bin/env bash
        source /venv/bin/activate
        set -e
        if [ -n "$(inputs.params.REQUIREMENTS_FILE)" ] && [ -e "$(inputs.params.SOURCE_PATH)/$(inputs.params.REQUIREMENTS_FILE)" ];then
          pip install -r $(inputs.params.SOURCE_PATH)/$(inputs.params.REQUIREMENTS_FILE)
        elif [ -n "$(inputs.params.REQUIREMENTS_FILE)" ] && [ -e "$(inputs.params.REQUIREMENTS_FILE)" ];then
          pip install -r $(inputs.params.REQUIREMENTS_FILE)
        fi
        if [ "$(inputs.params.INSTALLABLE)" != "False" ]; then
          pip install -e $(inputs.params.SOURCE_PATH)
        fi
        pip show pytest || {
            echo "###\nWarning: Pytest is missing in your requirements\n###";
            pip install pytest
          }
    - name: pytest
      workingDir: $(workspaces.source.path)/$(inputs.params.SOURCE_PATH)
      script: |
        #!/usr/bin/env bash
        source /venv/bin/activate
        set -e
        pytest $(inputs.params.PYTEST_ARGS)
