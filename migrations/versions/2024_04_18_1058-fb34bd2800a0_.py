"""empty message

Revision ID: fb34bd2800a0
Revises: c2433ae45adf
Create Date: 2024-04-18 10:58:39.225820

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "fb34bd2800a0"
down_revision = "c2433ae45adf"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("entry_tags", schema=None) as batch_op:
        batch_op.drop_constraint("uq_entry_tags_entry_id", type_="unique")
        batch_op.drop_column("id")
        batch_op.drop_column("created_at")
        batch_op.drop_column("updated_at")
        batch_op.drop_column("deleted_at")

    with op.batch_alter_table("roles_users", schema=None) as batch_op:
        batch_op.drop_constraint("uq_roles_users_user_id", type_="unique")
        batch_op.drop_column("id")
        batch_op.drop_column("created_at")
        batch_op.drop_column("updated_at")
        batch_op.drop_column("deleted_at")

    with op.batch_alter_table("shared_entry", schema=None) as batch_op:
        batch_op.alter_column("entry_id", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("user_id", existing_type=sa.INTEGER(), nullable=False)
        batch_op.drop_constraint("uq_shared_entry_entry_id", type_="unique")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("shared_entry", schema=None) as batch_op:
        batch_op.create_unique_constraint(
            "uq_shared_entry_entry_id", ["entry_id", "user_id"]
        )
        batch_op.alter_column("user_id", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("entry_id", existing_type=sa.INTEGER(), nullable=True)

    with op.batch_alter_table("roles_users", schema=None) as batch_op:
        batch_op.add_column(sa.Column("deleted_at", sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column("updated_at", sa.DATETIME(), nullable=True))
        batch_op.add_column(
            sa.Column(
                "created_at",
                sa.DATETIME(),
                server_default=sa.text("(CURRENT_TIMESTAMP)"),
                nullable=False,
            )
        )
        batch_op.add_column(sa.Column("id", sa.INTEGER(), nullable=False))
        batch_op.create_unique_constraint(
            "uq_roles_users_user_id", ["user_id", "role_id"]
        )

    with op.batch_alter_table("entry_tags", schema=None) as batch_op:
        batch_op.add_column(sa.Column("deleted_at", sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column("updated_at", sa.DATETIME(), nullable=True))
        batch_op.add_column(
            sa.Column(
                "created_at",
                sa.DATETIME(),
                server_default=sa.text("(CURRENT_TIMESTAMP)"),
                nullable=False,
            )
        )
        batch_op.add_column(sa.Column("id", sa.INTEGER(), nullable=False))
        batch_op.create_unique_constraint(
            "uq_entry_tags_entry_id", ["entry_id", "tag_id"]
        )

    # ### end Alembic commands ###
